/*
 * Jimmy Blaszkiewicz
 * Third Panel to collect response time and ear accuracy
 */

package HearingTest;

import static HearingTest.PanelThree.*;
import static HearingTest.PanelTwo.panel3;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.Timer;
import java.applet.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.net.*;
import javax.swing.*;
import javax.sound.sampled.*;

/**
 *
 * @author Jimmy
 */
public class PanelThree extends JFrame
{
    static JLabel header;
    static JimButton right;
    static JimButton left;
    static final int w = HearingTest.PanelOne.w;
    static final int h = HearingTest.PanelOne.h;
    static int soundStartTime;
    static int timeNow;
    static int reactionTime;
    static int ear; //value of 1 is right ear sound
                    //value of 2 is left  ear sound
    static int correctRight;
    static int incorrectRight;
    static int correctLeft;
    static int incorrectLeft;
    static int reactionSum;
    
    public PanelThree ()
    {
        super ("Hearing Test");
        setLayout(new FlowLayout());
        
        header = new JLabel ( "Press the button for the corresponding ear" );
        add ( header );
        
        
        header.setFont(new Font ("Baseline", Font.ROMAN_BASELINE, 16));
        
        left = new JimButton ("LEFT", w, h);
        add ( left );
        
        left.setFont(new Font ("Bold", Font.BOLD, 18) );
        
        right = new JimButton ("RIGHT", w, h);
        add ( right );
        
        right.setFont(new Font ("Bold", Font.BOLD, 18) );
        
        

        RightHandler rhandler = new RightHandler();
        right.addActionListener( rhandler );
        
        LeftHandler lhandler = new LeftHandler();
        left.addActionListener( lhandler );
        
        new SoundTimer();
    }//end panel three constructor
    
}//end panel three class

class SoundTimer extends JFrame{
        private final Timer timer;
        static int counter = 0;
        
        public SoundTimer(){
            timer = new Timer(10000, new TimerListener());
            timer.start();
        }
        private class TimerListener implements ActionListener
        {
            public void actionPerformed(ActionEvent event)
            {
                  String[] sounds =  {"500Hz-RC.wav", "5000Hz-RC.wav",
                      "8000Hz-LC.wav", "10000Hz-RC.wav", "500Hz-LC.wav", 
                      "2000Hz-RC.wav", "2000Hz-LC.wav", "1000Hz-LC.wav", 
                      "8000Hz-RC.wav", "5000Hz-LC.wav", "10000Hz-LC.wav", 
                      "1000Hz-RC.wav"};
                  
                  MetroSound test = new MetroSound(sounds[counter]);
                  counter ++;
                
           
                soundStartTime = (int) System.currentTimeMillis() %  1000000000;
                System.out.println(soundStartTime);
                
                if (counter == 12);
                {
                    panel3.dispose();
                    //idk what data goes to this or if this is needed at all
                    PanelFour panel4 = new PanelFour();
                    
                    // exit on close temporary until PanelThree finished 
                    // and PanelFour construction begins
                    panel4.setDefaultCloseOperation ( JFrame.EXIT_ON_CLOSE );
                    panel4.setSize( 1000, 400);
                    panel4.setVisible( true );
                    panel4.setLocationRelativeTo(null);
                }//end if
                
                    
            }
            
            }
}//end of class SoundTimer

class RightHandler implements ActionListener{
    
    public void actionPerformed( ActionEvent event )
    {
        System.out.println("You pressed the right button");
        timeNow =  (int) System.currentTimeMillis() %  10000000;
        System.out.println(timeNow);
        reactionTime = soundStartTime - timeNow;
        
        if( reactionTime < 2000 && ear == 1)
        {
            correctRight++;
            reactionSum += reactionTime;
        }
        else
            incorrectRight++;
        /*pseudocode
        reactionTime = soundStartTime - TimeNow
        if ( reactionTime is less than 300 milliseconds && the sound played in the right ear)
            increment correct answer for right ear
            add reaction time to a sum to be averaged later 
                and given to user as average reaction time
        //this reactionTime sum will be the same variable as the left ear
        else
            increment incorrect answer for right ear
        */
    }//end actionPerformed Method
    
}//end RightHandler
class LeftHandler implements ActionListener{
    
    public void actionPerformed( ActionEvent event )
    {
        System.out.println("You pressed the left button");
        timeNow =  (int) System.currentTimeMillis() %  10000000;
        System.out.println(timeNow);
        reactionTime = soundStartTime - timeNow;
        
        if( reactionTime < 2000 && ear == 2)
        {
            correctLeft++;
            reactionSum += reactionTime;
        }
        else
            incorrectLeft++;
        /*pseudocode
        reactionTime = SoundStartTime - TimeNow
        if ( reactionTime is less than 300 milliseconds && the sound played in the left ear)
            increment correct answer for left ear
            add reaction time to a sum to be averaged later 
                and given to user as average reaction time
        //this reactionTime sum will be the same variable as the right ear
        else
            increment incorrect answer for left ear
        */
    }//end actionPerformed Method
}//end LeftHandler
